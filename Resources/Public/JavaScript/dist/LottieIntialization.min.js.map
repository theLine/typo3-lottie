{"version":3,"sources":["LottieIntialization.min.js"],"names":["root","factory","getProto","Object","getPrototypeOf","jQuery","isPlainObject","obj","proto","Ctor","toString","call","hasOwn","constructor","fnToString","ObjectFunctionString","extend","options","name","src","copy","copyIsArray","clone","target","arguments","i","length","deep","nodeType","isFunction","this","Array","isArray","undefined","define","amd","LottieIntialization","lottie","inView","LottieIntializationInstance","self","that","$","defaultOptions","searchAnimations","inViewElements","inViewSelector","threshold","inViewThreshold","on","inViewElement","inViewLottieHandler","animation","play","pause","prototype","element","callback","getRegisteredAnimations","forEach","wrapper","apply","getInviewElements"],"mappings":"CAAE,SAAUA,EAAMC,GACjB,aAEA,IAOIC,EAAWC,OAAOC,eAElBC,EAASL,EAAKK,QAAU,CAC3BC,cAAe,SAAUC,GACxB,IAAIC,EAAOC,EAIX,SAAMF,GAAgC,oBAAzBG,SAASC,KAAMJ,QAI5BC,EAAQN,EAAUK,KASK,mBADvBE,EAAOG,OAAOD,KAAMH,EAAO,gBAAmBA,EAAMK,cACfC,WAAWH,KAAMF,KAAWM,uBAElEC,OAAQ,WACP,IAAIC,EAASC,EAAMC,EAAKC,EAAMC,EAAaC,EAC1CC,EAASC,UAAW,IAAO,GAC3BC,EAAI,EACJC,EAASF,UAAUE,OACnBC,GAAO,EAsBR,IAnBuB,kBAAXJ,IACXI,EAAOJ,EAGPA,EAASC,UAAWC,IAAO,GAC3BA,KAIsB,iBAAXF,GA/CG,SAAqBhB,GAKrC,MAAsB,mBAARA,GAA8C,iBAAjBA,EAAIqB,SA0CVC,CAAYN,KAC/CA,EAAS,IAILE,IAAMC,IACVH,EAASO,KACTL,KAGOA,EAAIC,EAAQD,IAGnB,GAAqC,OAA9BR,EAAUO,UAAWC,IAG3B,IAAMP,KAAQD,EACbG,EAAOH,EAASC,GAIF,cAATA,GAAwBK,IAAWH,IAKnCO,GAAQP,IAAUf,EAAOC,cAAec,KAC1CC,EAAcU,MAAMC,QAASZ,MAC/BD,EAAMI,EAAQL,GAIbI,EADID,IAAgBU,MAAMC,QAASb,GAC3B,GACIE,GAAgBhB,EAAOC,cAAea,GAG1CA,EAFA,GAITE,GAAc,EAGdE,EAAQL,GAASb,EAAOW,OAAQW,EAAML,EAAOF,SAGzBa,IAATb,IACXG,EAAQL,GAASE,IAOrB,OAAOG,IAIa,mBAAXW,QAAyBA,OAAOC,IAC1CD,OAAO,CAAC,SAAU,WAAYjC,IAE9BD,EAAKoC,oBAAsBnC,EAAQD,EAAKqC,OAAQrC,EAAKsC,QACrDtC,EAAKuC,4BAA8B,IAAIvC,EAAKoC,qBA9G7C,CAgHiB,oBAATI,KAAuBA,KAAOV,KAAM,SAAUO,EAAQC,GAE9D,SAASF,EAAqBnB,GAC7B,IAAIwB,EAAOX,KACXW,EAAKxB,QAAUyB,EAAE1B,QAAO,EAAM,GAAIoB,EAAoBO,eAAgB1B,GAEtEoB,EAAOO,mBAEP,IAAIC,EAAiBJ,EAAKI,eAAiBP,EAAOG,EAAKxB,QAAQ6B,gBAC/DL,EAAKI,eAAe5B,QAAQ8B,UAAYN,EAAKxB,QAAQ+B,gBACrDH,EAAeI,GAAG,QAAS,SAAUC,GACpCT,EAAKU,oBAAoBD,EAAe,SAAUE,GACjDA,EAAUC,WAGZR,EAAeI,GAAG,OAAQ,SAAUC,GACnCT,EAAKU,oBAAoBD,EAAe,SAAUE,GACjDA,EAAUE,YAwBb,OApBAlB,EAAoBO,eAAiB,CACpCG,eAAgB,UAChBE,gBAAiB,IAElBN,EAAE1B,QAAO,EAAMoB,EAAoBmB,UAAW,CAC7CJ,oBAAqB,SAAUK,EAASC,GACvC3B,KAAK4B,0BAA0BC,QAAQ,SAAUP,GAC5CI,IAAYJ,EAAUQ,SACzBH,EAASI,MAAML,EAAS,CAACJ,EAAWI,OAIvCE,wBAAyB,WACxB,OAAOrB,EAAOqB,2BAEfI,kBAAmB,WAClB,OAAOhC,KAAKe,kBAIPT","file":"LottieIntialization.min.js","sourcesContent":[";(function (root, factory) {\n\t\"use strict\";\n\n\tvar isFunction = function isFunction( obj ) {\n\t\t// Support: Chrome <=57, Firefox <=52\n\t\t// In some browsers, typeof returns \"function\" for HTML <object> elements\n\t\t// (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).\n\t\t// We don't want to classify *any* DOM node as a function.\n\t\treturn typeof obj === \"function\" && typeof obj.nodeType !== \"number\";\n\t};\n\tvar getProto = Object.getPrototypeOf;\n\n\tvar jQuery = root.jQuery || {\n\t\tisPlainObject: function( obj ) {\n\t\t\tvar proto, Ctor;\n\n\t\t\t// Detect obvious negatives\n\t\t\t// Use toString instead of jQuery.type to catch host objects\n\t\t\tif ( !obj || toString.call( obj ) !== \"[object Object]\" ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tproto = getProto( obj );\n\n\t\t\t// Objects with no prototype (e.g., `Object.create( null )`) are plain\n\t\t\tif ( !proto ) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Objects with prototype are plain iff they were constructed by a global Object function\n\t\t\tCtor = hasOwn.call( proto, \"constructor\" ) && proto.constructor;\n\t\t\treturn typeof Ctor === \"function\" && fnToString.call( Ctor ) === ObjectFunctionString;\n\t\t},\n\t\textend: function() {\n\t\t\tvar options, name, src, copy, copyIsArray, clone,\n\t\t\t\ttarget = arguments[ 0 ] || {},\n\t\t\t\ti = 1,\n\t\t\t\tlength = arguments.length,\n\t\t\t\tdeep = false;\n\n\t\t\t// Handle a deep copy situation\n\t\t\tif ( typeof target === \"boolean\" ) {\n\t\t\t\tdeep = target;\n\n\t\t\t\t// Skip the boolean and the target\n\t\t\t\ttarget = arguments[ i ] || {};\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\t// Handle case when target is a string or something (possible in deep copy)\n\t\t\tif ( typeof target !== \"object\" && !isFunction( target ) ) {\n\t\t\t\ttarget = {};\n\t\t\t}\n\n\t\t\t// Extend jQuery itself if only one argument is passed\n\t\t\tif ( i === length ) {\n\t\t\t\ttarget = this;\n\t\t\t\ti--;\n\t\t\t}\n\n\t\t\tfor ( ; i < length; i++ ) {\n\n\t\t\t\t// Only deal with non-null/undefined values\n\t\t\t\tif ( ( options = arguments[ i ] ) != null ) {\n\n\t\t\t\t\t// Extend the base object\n\t\t\t\t\tfor ( name in options ) {\n\t\t\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t\t\t// Prevent Object.prototype pollution\n\t\t\t\t\t\t// Prevent never-ending loop\n\t\t\t\t\t\tif ( name === \"__proto__\" || target === copy ) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\n\t\t\t\t\t\t\t( copyIsArray = Array.isArray( copy ) ) ) ) {\n\t\t\t\t\t\t\tsrc = target[ name ];\n\n\t\t\t\t\t\t\t// Ensure proper type for the source value\n\t\t\t\t\t\t\tif ( copyIsArray && !Array.isArray( src ) ) {\n\t\t\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\t\t} else if ( !copyIsArray && !jQuery.isPlainObject( src ) ) {\n\t\t\t\t\t\t\t\tclone = {};\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tclone = src;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcopyIsArray = false;\n\n\t\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Return the modified object\n\t\t\treturn target;\n\t\t}\n\t};\n\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(['lottie', 'in-view'], factory);\n\t} else {\n\t\troot.LottieIntialization = factory(root.lottie, root.inView);\n\t\troot.LottieIntializationInstance = new root.LottieIntialization();\n\t}\n}(typeof self !== 'undefined' ? self : this, function (lottie, inView) {\n\n\tfunction LottieIntialization (options) {\n\t\tvar that = this;\n\t\tthat.options = $.extend(true, {}, LottieIntialization.defaultOptions, options);\n\n\t\tlottie.searchAnimations();\n\n\t\tvar inViewElements = that.inViewElements = inView(that.options.inViewSelector);\n\t\tthat.inViewElements.options.threshold = that.options.inViewThreshold;\n\t\tinViewElements.on('enter', function (inViewElement) {\n\t\t\tthat.inViewLottieHandler(inViewElement, function (animation) {\n\t\t\t\tanimation.play();\n\t\t\t});\n\t\t});\n\t\tinViewElements.on('exit', function (inViewElement) {\n\t\t\tthat.inViewLottieHandler(inViewElement, function (animation) {\n\t\t\t\tanimation.pause();\n\t\t\t});\n\t\t});\n\t}\n\tLottieIntialization.defaultOptions = {\n\t\tinViewSelector: '.lottie',\n\t\tinViewThreshold: 0.5\n\t};\n\t$.extend(true, LottieIntialization.prototype, {\n\t\tinViewLottieHandler: function (element, callback) {\n\t\t\tthis.getRegisteredAnimations().forEach(function (animation) {\n\t\t\t\tif (element === animation.wrapper) {\n\t\t\t\t\tcallback.apply(element, [animation, element]);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tgetRegisteredAnimations: function () {\n\t\t\treturn lottie.getRegisteredAnimations();\n\t\t},\n\t\tgetInviewElements: function() {\n\t\t\treturn this.inViewElements;\n\t\t}\n\t});\n\n\treturn LottieIntialization;\n\n}));\n"]}